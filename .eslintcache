[{"/home/yonosoytony/.Projects/ghibli-api-catalog/src/index.js":"1","/home/yonosoytony/.Projects/ghibli-api-catalog/src/App.js":"2","/home/yonosoytony/.Projects/ghibli-api-catalog/src/GhibliController.js":"3","/home/yonosoytony/.Projects/ghibli-api-catalog/src/FilmList.js":"4","/home/yonosoytony/.Projects/ghibli-api-catalog/src/OMDbController.js":"5","/home/yonosoytony/.Projects/ghibli-api-catalog/src/Film.js":"6","/home/yonosoytony/.Projects/ghibli-api-catalog/src/Splashscreen.js":"7","/home/yonosoytony/.Projects/ghibli-api-catalog/src/UserContext.js":"8","/home/yonosoytony/.Projects/ghibli-api-catalog/src/useLocalStorage.js":"9"},{"size":196,"mtime":1611384373663,"results":"10","hashOfConfig":"11"},{"size":3940,"mtime":1611551667291,"results":"12","hashOfConfig":"11"},{"size":522,"mtime":1611551293011,"results":"13","hashOfConfig":"11"},{"size":446,"mtime":1611442774812,"results":"14","hashOfConfig":"11"},{"size":318,"mtime":1611395046266,"results":"15","hashOfConfig":"11"},{"size":2345,"mtime":1611548339197,"results":"16","hashOfConfig":"11"},{"size":634,"mtime":1611462842735,"results":"17","hashOfConfig":"11"},{"size":82,"mtime":1611466100467,"results":"18","hashOfConfig":"11"},{"size":542,"mtime":1611468847935,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mt74nr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/home/yonosoytony/.Projects/ghibli-api-catalog/src/index.js",[],["43","44"],"/home/yonosoytony/.Projects/ghibli-api-catalog/src/App.js",["45","46","47","48","49"],"// Bootstrap dependencies\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Navbar, Nav, Form, option, Button} from 'react-bootstrap'\n\n// router dependencies\nimport {Link} from 'react-router-dom'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n// react dependencies\nimport React, {useState, useEffect, useContext, useRef }from 'react'\nimport {UserContext} from './UserContext'\nimport useLocalStorage from './useLocalStorage'\n\n// API query abstraction\nimport { getFilms, getSearch } from './GhibliController'\n\n// subcomponents\nimport { FilmList } from './FilmList'\nimport { Splashscreen } from './Splashscreen'\n\nconst App = () => {\n\n  const [favs, setFavs] = useLocalStorage('films', [])\n  return(\n    <Router>\n      <UserContext.Provider value={{favs, setFavs}}>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>\n            <Link to={'/'}>Catalog</Link>\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link>\n              <Link to={'/favs'}>Favs</Link>\n            </Nav.Link>\n            <Nav.Link>\n              <Link to={'/custom'}>Search</Link>\n            </Nav.Link>\n            <Nav.Link href=\"https://ghibliapi.herokuapp.com/\">Ghibli API</Nav.Link>\n            <Nav.Link href=\"https://www.omdbapi.com/\">OMDb API</Nav.Link>\n            <Nav.Link href=\"https://github.com/antoniosalinasolivares/ghibli-api-catalog\">Source</Nav.Link>\n          </Nav>\n        </Navbar>\n        <Switch style={{\n                'padding':'10px 10px 10px 10px',\n        }}>\n          <Route exact path='/' component={Home} />\n          <Route path='/favs' component={Favs} />\n          <Route path='/custom' component={Custom} />\n        </Switch>\n      </UserContext.Provider>\n    </Router>\n\n  )\n}\n\n\nconst Home = () => {\n\n  const [loaded, setLoaded] = useState(false);\n  const [beenhere, setBeenhere] = useState(false)\n  const [films, setFilms] = useState([])\n\n\n  useEffect(()=>{\n    if(!beenhere){\n      setTimeout(()=>{\n        getFilms(setFilms, setLoaded)\n        setBeenhere(true)\n      }, 1500)\n    }\n  }, [])\n\n  return (\n    \n      <div>\n        {loaded?\n        <>\n            <div style={{\n                'padding':'10px 10px 10px 10px',\n            }}>\n              <FilmList style={{\n              }} films= {films} />\n            </div>     \n        </>:\n        <Splashscreen/>}\n      </div>\n  )\n}\n\nconst Favs = () => {\n  const {favs, setFavs} = useContext(UserContext)\n  return(\n        <>\n            <div style={{\n                'padding':'10px 10px 10px 10px',\n            }}>\n              <FilmList style={{\n              }} films= {favs} />\n            </div>     \n        </>\n        )\n}\n\nconst Custom = () => {\n\n  const [Collection, setCollection] = useState([])\n  const [query, setQuery] = useLocalStorage('query', 'People')\n  const formRef = useRef()\n\n  useEffect(() => {\n    setCollection((current)=> {\n      if(!getSearch(query, setCollection)){\n        setCollection('Fallo el API')\n      }\n      console.log(Collection)\n    })\n  }, [query])\n\n  useEffect(() => {\n    formRef.current.value = query\n  }, [])\n\n  const search = () => {\n    setQuery(formRef.current.value)\n  }\n\n  return(\n    <>\n      <div style={{\n                'padding':'10px 10px 10px 10px',\n            }}>\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Select your search</Form.Label>\n              <Form.Control ref={formRef} as=\"select\">\n                <option>People</option>\n                <option>Locations</option>\n                <option>Species</option>\n                <option>Vehicles</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n          <Button onClick={()=>{\n            setQuery(formRef.current.value)\n            console.log(formRef.current.value)\n          }}>Search</Button>\n\n          {JSON.stringify(Collection)}\n\n      </div>\n    </>\n  )\n}\n\nexport default App\n","/home/yonosoytony/.Projects/ghibli-api-catalog/src/GhibliController.js",[],"/home/yonosoytony/.Projects/ghibli-api-catalog/src/FilmList.js",[],"/home/yonosoytony/.Projects/ghibli-api-catalog/src/OMDbController.js",[],["50","51"],"/home/yonosoytony/.Projects/ghibli-api-catalog/src/Film.js",["52","53"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport { getPictureSrc } from './OMDbController'\nimport { Card, Modal, Button } from 'react-bootstrap'\nimport React, { useState, useEffect, useContext } from 'react'\nimport {UserContext} from './UserContext'\nexport const Film = (props) => {\n\n    const [showModal, setShowModal] = useState(false)\n    const [imgSrc, setImgSrc] = useState('');\n    useEffect(()=>{\n        const a = async ()=> {\n            const source = await getPictureSrc(props.title)\n            setImgSrc(source)\n        }\n        a()\n    },[])\n\n    return (\n            <div className=\"col-md-3\" styles={{\n                'margin':'10px 0px 10px 0px'\n            }}>\n                <Card key={props.id} >\n                    <Card.Img src={imgSrc} />\n                    <Card.Body>\n                        <Card.Title>\n                            {props.title}\n                        </Card.Title>\n                        <Button variant=\"primary\" onClick={() => setShowModal(true)}>\n                            Show description\n                        </Button>\n                        <VerticallyCenteredModal\n                            film={{\n                                title:props.title,\n                                description:props.description,\n                                id:props.id\n                            }}\n                            show={showModal}\n                            onHide={() => setShowModal(false)}\n                        />\n                    </Card.Body>\n                </Card>\n            </div>\n    )\n}\n\n\nfunction VerticallyCenteredModal(props) {\n  const {favs, setFavs} = useContext(UserContext)\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.film.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          {props.film.description }\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={()=>{\n          setFavs((currentFavs)=>{\n            return [...currentFavs, props.film]\n          })\n        }}>Add to favourites</Button>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","/home/yonosoytony/.Projects/ghibli-api-catalog/src/Splashscreen.js",[],"/home/yonosoytony/.Projects/ghibli-api-catalog/src/UserContext.js",[],"/home/yonosoytony/.Projects/ghibli-api-catalog/src/useLocalStorage.js",["54"],"import {useEffect, useState} from 'react'\n\nfunction getSavedValue(key, initialValue){\n    const savedValue = JSON.parse(localStorage.getItem(key))\n    if (savedValue) return savedValue\n    if(initialValue instanceof Function) return initialValue()\n    return initialValue\n}\n\n\nexport default function useLocalStorage(key, initialValue){\n    const [value, setValue] = useState(()=> getSavedValue(key, initialValue))\n\n\n    useEffect(() => {\n        localStorage.setItem(key,JSON.stringify(value))\n    }, [value])\n\n    return [value, setValue]\n}\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":71,"column":6,"nodeType":"61","endLine":71,"endColumn":8,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":91,"column":16,"nodeType":"65","messageId":"66","endLine":91,"endColumn":23},{"ruleId":"59","severity":1,"message":"67","line":117,"column":6,"nodeType":"61","endLine":117,"endColumn":13,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":121,"column":6,"nodeType":"61","endLine":121,"endColumn":8,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":123,"column":9,"nodeType":"65","messageId":"66","endLine":123,"endColumn":15},{"ruleId":"55","replacedBy":"72"},{"ruleId":"57","replacedBy":"73"},{"ruleId":"59","severity":1,"message":"74","line":16,"column":7,"nodeType":"61","endLine":16,"endColumn":9,"suggestions":"75"},{"ruleId":"63","severity":1,"message":"76","line":48,"column":10,"nodeType":"65","messageId":"66","endLine":48,"endColumn":14},{"ruleId":"59","severity":1,"message":"77","line":17,"column":8,"nodeType":"61","endLine":17,"endColumn":15,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'beenhere'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-unused-vars","'setFavs' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'Collection'. Either include it or remove the dependency array. You can also do a functional update 'setCollection(C => ...)' if you only need 'Collection' in the 'setCollection' call.",["82"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["83"],"'search' is assigned a value but never used.",["79"],["80"],"React Hook useEffect has a missing dependency: 'props.title'. Either include it or remove the dependency array.",["84"],"'favs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [beenhere]",{"range":"96","text":"97"},"Update the dependencies array to be: [Collection, query]",{"range":"98","text":"99"},"Update the dependencies array to be: [query]",{"range":"100","text":"101"},"Update the dependencies array to be: [props.title]",{"range":"102","text":"103"},"Update the dependencies array to be: [key, value]",{"range":"104","text":"105"},[2078,2080],"[beenhere]",[3029,3036],"[Collection, query]",[3098,3100],"[query]",[557,559],"[props.title]",[501,508],"[key, value]"]